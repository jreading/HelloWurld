<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: html | Always On]]></title>
  <link href="http://HelloWurld.heroku.com/blog/categories/html/atom.xml" rel="self"/>
  <link href="http://HelloWurld.heroku.com/"/>
  <updated>2013-06-17T21:27:39-04:00</updated>
  <id>http://HelloWurld.heroku.com/</id>
  <author>
    <name><![CDATA[J.Reading]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[The Carousel of Progress]]></title>
    <link href="http://HelloWurld.heroku.com/blog/2013/06/15/the-carousel-of-progress/"/>
    <updated>2013-06-15T16:29:00-04:00</updated>
    <id>http://HelloWurld.heroku.com/blog/2013/06/15/the-carousel-of-progress</id>
    <content type="html"><![CDATA[<p>There's so much to being a front-end web developer these days that some stuff is often overlooked. Calling yourself an expert says alot, a whole lot. Guess what? You're probably not one, but that doesn't matter anyway... Progress marches on and if your paying attention, you're in for a good ride.</p>

<!-- more -->


<p>I find myself going back to <a href="http://rmurphey.com/blog/2012/04/12/a-baseline-for-front-end-developers/">this blog post by Rebebcca Murphey</a> whenever the discussion comes up of hiring and the entry-level requirements for a UI engineer. It's hard to argue with any of those points, but when I ask myself what constitutes an expert; it's a much harder thing to quantify.</p>

<p>The modern web is growing by leaps and bounds lately and it's hard to keep up some times, so here's a list of some things that are on the horizon or in the mainstream that were essentially nonexistent a few months  (or weeks) ago.</p>

<h2>HTML/Web APIs</h2>

<ul>
<li>Shadow DOM</li>
</ul>


<p>Are you ready to start churning out web components? Are you psyched to see the imminent demise of the iframe? <a href="http://www.html5rocks.com/en/tutorials/webcomponents/shadowdom/">Cool, me too</a>.</p>

<ul>
<li>AppCache</li>
</ul>


<p>The douchebag is alive and well. <a href="http://blip.tv/jsconf/jsconf2012-jake-archibald-appcache-douchebag-6143723">Better get up to speed in all it's quirks</a>.</p>

<ul>
<li>Web Storage</li>
</ul>


<p>The days of the legacy Netscape "magic cookie" are behind us. <a href="https://developer.mozilla.org/en-US/docs/Web/Guide/DOM/Storage">Hurray</a>!</p>

<ul>
<li>WebRTC</li>
</ul>


<p>So, so many cool things are going to come of webRTC. Realtime communication is going to be ubiquitious. <a href="https://webrtc-experiment.appspot.com/">Check out all these demos</a>.</p>

<ul>
<li>WebGL</li>
</ul>


<p>It's 2013, I shouldn't have to hear "Flash could do that 10 years ago." Thanks <a href="http://learningwebgl.com/blog/">WebGL</a>!</p>

<ul>
<li>Canvas</li>
</ul>


<p><a href="http://css-tricks.com/learn-canvas-snake-game/">Canvas</a> is one of the technologies that can build a career. My advice is to learn more than just canvas.</p>

<ul>
<li>Semantics</li>
</ul>


<p>Still waiting for a set of hard standards in terms of semantics. Doesn't mean this is extremely important to SEO, internationalization and plain, ole' good form. This is one of those "strong opinions weakly held" moments.</p>

<ul>
<li>Sockets</li>
</ul>


<p>Sockets are becoming indespensible. Yeah, flash "could do it years ago," but browsers <a href="http://www.html5rocks.com/en/tutorials/websockets/basics/">can do it today</a>.</p>

<ul>
<li>Proximity API</li>
</ul>


<p>Damn, FireFox is really doing some cool stuff lately. Here's in glimpse into the future: the <a href="https://hacks.mozilla.org/2013/06/the-proximity-api/">proximity API</a>.</p>

<h2>JS</h2>

<ul>
<li>Libraries: Backbone, Angular, et al.</li>
</ul>


<p>You've clearly been under a rock if you don't have one of these under your belt. MV* is a narrow use case on the front-end, but gaining more and more ground (Angular looks to unseat Backbone recently). Take a look at <a href="http://www.polymer-project.org/">Google's Polymer</a> (which is built on web components).</p>

<ul>
<li>Modules, Require.js</li>
</ul>


<p>Climb out from under there and get on board. <a href="http://corner.squareup.com/2013/02/es6-module-transpiler.html">Js Modules</a> look to be native in ES6.</p>

<ul>
<li>Promises</li>
</ul>


<p>Again, this is something that will be <a href="http://domenic.me/2012/10/14/youre-missing-the-point-of-promises/">native someday</a> and in jQuery for ages. <a href="http://promises-aplus.github.io/promises-spec/">Here's the standard</a>. <a href="https://www.youtube.com/watch?feature=player_detailpage&amp;v=H8Q83DPZy6E#t=30s">Promises, promises</a>.</p>

<ul>
<li>Strict Mode</li>
</ul>


<p><a href="http://scriptogr.am/micmath/post/should-you-use-strict-in-your-production-javascript">Get used to it</a>. It's going to be a requirement soon enough.</p>

<ul>
<li>Testing</li>
</ul>


<p>Testing is the new normal. <a href="http://alistapart.com/article/writing-testable-javascript">Another great post by Ms. Murphey</a>.</p>

<ul>
<li>Node/NPM</li>
</ul>


<p>If I was writing a similar article for backend developers this would be at the top of the list. But for the front-end, it's just not cool to say you can't use the terminal, run <code>npm install</code> and push to a cloud-based repository or production server. <a href="http://net.tutsplus.com/tutorials/javascript-ajax/node-js-for-beginners/">Learn node</a> and don't be a hater. It's just not acceptable and so, so <a href="http://www.youtube.com/watch?v=1e1zzna-dNw">NOT cool</a>.</p>

<ul>
<li>Patterns</li>
</ul>


<p>Everyone agrees on the best pattern, so I almost didn't include this very <a href="http://shichuan.github.io/javascript-patterns/">thorough list of popular javascript patterns</a>. There's hardly any dissent on the best way to code. ;P In seriousness, the <a href="http://cujojs.com/">AOP pattern</a> presented in cujo.js looks great.</p>

<ul>
<li>ES6/7</li>
</ul>


<p><a href="http://tc39wiki.calculist.org/es6/">So much hard work</a> goes into the TC39 committee, if you ever see a member, give them a hug. Brendan Eich mentions es7 at jsConf recently... Wha?? Also, an <a href="http://kangax.github.io/es5-compat-table/es6/">awesome chart</a>.</p>

<h2>CSS</h2>

<ul>
<li>Painting Optimization</li>
</ul>


<p>Painting Optimization is the new <code>for</code> loop optimization. <a href="https://developers.google.com/events/io/sessions/325933151">Pay attention</a>.</p>

<ul>
<li>Scoped stylesheets</li>
</ul>


<p>Another thing to come out of chromium. <a href="http://updates.html5rocks.com/2012/03/A-New-Experimental-Feature-style-scoped">Take a look and learn</a>.</p>

<ul>
<li>Preprocessors</li>
</ul>


<p>Sass, Stylus, Rework.  LESS couldn't survive its tortured past. Regardless, <a href="http://blog.teamtreehouse.com/how-to-choose-the-right-css-preprocessor">they're here to stay</a>.</p>

<ul>
<li>Flexible box model</li>
</ul>


<p>Finally a solution to the float vs. inline-block problem. And the 100% height problem. And so many other ancient layout issues. <a href="http://coding.smashingmagazine.com/2011/09/19/css3-flexible-box-layout-explained/">So much better</a>...</p>

<ul>
<li>Native grids</li>
</ul>


<p>Damn, <a href="http://www.w3.org/TR/css3-grid-layout/">this will be nice</a>.</p>

<ul>
<li>Web Animations &amp; the GPU</li>
</ul>


<p>When css keyframe animation first came out in webkit, I found it to be unusable from a performance point of view. Browsers have come far enough now that <a href="http://css-tricks.com/snippets/css/keyframe-animation-syntax/">it's reliable</a>.</p>

<ul>
<li>Filters, Shaders, Masking, Gradients, Shadows...</li>
</ul>


<p>So <a href="http://html5-demos.appspot.com/static/css/filters/index.html">many</a> <a href="http://www.adobe.com/devnet/html5/articles/css-shaders.html">cool</a> <a href="http://www.html5rocks.com/en/tutorials/masking/adobe/">things</a> you can do in css now.</p>

<ul>
<li>@supports</li>
</ul>


<p>Capabilities testing in css you say? <a href="http://davidwalsh.name/css-supports">Cool</a>.</p>

<h2>Networks &amp; Devices</h2>

<ul>
<li>Latency</li>
</ul>


<p>I'm all about custom builds for mobile networks (inline all the things). <a href="http://www.igvita.com/2012/07/19/latency-the-new-web-performance-bottleneck/">Latency is a killer in mobile</a>.</p>

<h2>Deployment, Build Processes, and Monitoring Services</h2>

<ul>
<li><a href="http://github.com">Github</a>, <a href="https://bitbucket.org/">bitbucket</a>, <a href="https://www.heroku.com/">heroku</a>, <a href="https://www.nodejitsu.com/">nodejitsu</a></li>
</ul>


<p>Don't tell me you still use SVN.</p>

<ul>
<li><a href="https://travis-ci.org/">Travis CI</a>, <a href="https://david-dm.org/">David</a> (he kinda looks creepy), <a href="http://gruntjs.com/">Grunt</a>, <a href="http://yeoman.io/">Yeoman</a>.</li>
</ul>


<p>You need to know all of them.</p>
]]></content>
  </entry>
  
</feed>
